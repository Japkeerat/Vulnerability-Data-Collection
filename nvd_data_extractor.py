import os
import time
import logging
from multiprocessing import Queue
from datetime import datetime, timedelta

import nvdlib


class NVDDataExtractor:
    def __init__(self, transformation_queue: Queue):
        self.transform_queue = transformation_queue
        self.nvd_api_key = os.get_env("NVD_API_KEY")
        
    def find_start_date(self) -> datetime:
        # TODO: It should query the database to find the last date that was extracted
        # Currently, it is hardcoded to 1st January 2010
        start_date = datetime(2010, 1, 1)
        return start_date
    
    def enqueue_records(records: list):
        for record in records:
            self.transform_queue.put(record)
    
    def extract_data(self):
        start_date = self.find_start_date()
        today_date = datetime.now().date()
        delta = timedelta(weeks=1)
        failure_counter = 0
        while start_date < today_date:
            end_date = start_date + delta
            try:
                records = nvdlib.searchCVE(pubStartDate=start_date, pubEndDate=end_date, key=self.nvd_api_key)
                self.enqueue_records(records)
                start_date = end_date
            except Exception as e:
                logging.error(f"Error while extracting data from NVD API: {e}")
                failure_counter += 1
                if failure_counter > 5:
                    break
                time.sleep(180)
